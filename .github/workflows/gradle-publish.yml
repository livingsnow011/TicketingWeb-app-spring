# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

#환경변수 생성
env: 
  S3_BUCKET_NAME: ticketingweb-build
  PROJECT_NAME: ticketingweb-app-spring
  CODE_DEPLOY_APP_NAME: ticketingweb-webservice
  CODE_DEPLOY_GROUP_NAME: ticketingweb-webservice-group

name: deploy

on:
  release:
    types: [push] # push 시 자동으로 실행
  push:
    branches: [main] # main 브렌치에서 동작
  workflow_dispatch: # 수동으로도 실행이 가능

jobs:
  build:
    runs-on: ubuntu-latest #스크립트를 작동할 os
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3 # 이 프로젝트 코드 checkout
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        
    - name: Make application-real.properties
      run: |
        cd ./src/main/resources
        touch ./application-real.properties
        echo "${{secrets.PROPERTIES}}" >> ./application-real.properties
      shell: bash

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew # 
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean build -x test # test 패키지 제외하고 빌드
      shell: bash
      
    - name: Get current time
      uses: 1466587594/get-current-time@v2  
      id: current-time
      with:
        format: YYYY-MM-DDTHH-mm-ss 
        utcOffset: "+09:00"

    - name: Show Current Time
      run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}" # (10)
      shell: bash
      
    - name: Make zip file
      run: zip -r ./$PROJECT_NAME.zip .         # 프로젝트를 zip 파일로 압축
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1      # aws에 해당 키 값으로 접속
      with:
        #repository-settings-secret
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$PROJECT_NAME.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$PROJECT_NAME.zip    #(14)
        
    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODE_DEPLOY_GROUP_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$PROJECT_NAME.zip    #(16)
    
